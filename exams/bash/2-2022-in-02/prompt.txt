2022-IN-02

Името на дадена машина можете да вземете с командата h o s t n a m e - s .
Разполагате с машина, на която е инсталиран специализиран софтуер, който ползва два потребителски
акаунта – o r a c l e и g r i d .
Всеки от потребителите би трябвало да има environment променлива O R A C L E _ B A S E , която указва абсолютен
път до директория във формат / п ъ т / д о / д и р .
Всеки от потребителите би трябвало да има environment променлива O R A C L E _ H O M E , която указва абсолютен
път до директория във формат / п ъ т / д о / д и р . В поддиректорията b i n на зададената директория би
трябвало да има изпълним файл с име s q l p l u s .
Всеки от потребителите би трябвало да има environment променлива O R A C L E _ S I D с някакъв низ като
стойност.
Ако горните три environment променливи съществуват, всеки от потребителите може да изпълнява
неговото копие на командата s q l p l u s със следните параметри: s q l p l u s - S L " / a s р о л я " @ f o o . s q l
където р о л я трябва да бъде низът S Y S D B A при изпълнение от o r a c l e и S Y S A S M при изпълнение от g r i d .
И в двата случая s q l p l u s изпълнява SQL заявките от файла (f o o . s q l , името на файла няма значение)
и извежда изхода на stdout. Ако съдържанието на sql файла е:

S E L E C T v a l u e F R O M v $ p a r a m e t e r W H E R E n a m e = ' d i a g n o s t i c _ d e s t ' ;

E X I T ;

изходът ще бъде стойността на търсения параметър d i a g n o s t i c _ d e s t в следния вид:
o r a c l e @ a s t e r o : ~ $ s q l p l u s - S L " / a s s y s d b a " @ a . s q l
V A L U E
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
/ u 0 1 / a p p / o r a c l e
o r a c l e @ a s t e r o : ~ $
Параметърът d i a g n o s t i c _ d e s t може да няма стойност, в който случай изведеният низ ще е празен.
Изходът винаги е 5 реда, стойността винаги е на 4-и ред. Ако командата s q l p l u s не се изпълни успешно,
тя ще върне ненулев exit code.
За всеки от двата акаунта съществува директория, която ще наричаме diag_base. Конкретната директория
е:

• същата като O R A C L E _ B A S E , ако d i a g n o s t i c _ d e s t няма стойност
• същата като d i a g n o s t i c _ d e s t , ако d i a g n o s t i c _ d e s t има стойност
За всеки от двата акаунта би трябвало да съществува под-директория на diag_base с име d i a g , която
ще наричаме diag_dir.
Съществуват три множества интересни за нас файлове:
• множество c r s – за потребител g r i d , в diag_dir има под-директория c r s , в която има под-директория
с името на машината, в която има под-директория c r s , в която има под-директория t r a c e . Интересни
за нас файлове в тази директория са такива, чието име завършва на подчертавка-число и имат
разширение t r c или t r m , например f o o _ 3 5 6 . t r c , b a r _ 4 0 0 0 1 . t r m .
• множество t n s l s n r – за потребител g r i d , в diag_dir има под-директория t n s l s n r , в която има
под-директория с името на машината, в която има няколко директории с различни имена. Във

всяка от тези директории има под-директории a l e r t и t r a c e . Интересни за нас са файловете
в a l e r t , чието име завършва на подчертавка-число и имат разширение x m l (напр. b a z _ 7 8 . x m l )
и файловете в t r a c e , чието име завършва на подчертавка-число и имат разширение l o g (напр.

q u x _ 8 8 2 3 1 . l o g ).
• множество r d b m s – за потребител o r a c l e , в diag_dir има под-директория r d b m s , в която има
няколко под-директории, във всяка от които може да има няколко под-директории. Интересни
за нас са само файловете в тези директории на второ ниво, чието име завършва на подчертавка-

число и имат разширение t r c или t r m , например c o r g e _ 2 7 . t r c , g r a u l t _ 1 0 2 4 . t r m .
Напишете скрипт, който може да се изпълнява само от някой от тези два акаунта, и приема задължителен

първи позиционен аргумент число (в дни). В зависимост от това кой потребител изпълнява скрипта,
той трябва да извежда на stdout за всяко множество на съответния потребител общият размер (в
килобайти) на описаните по-горе интересни файлове за които времето на последната промяна (по
съдържание) на файла е по-голямо от зададеното като параметър на скрипта.
Примерно изпълнение и изход:
o r a c l e @ a s t e r o : ~ $ . / f o o . s h 4 2
r d b m s : 1 4 4 0 0
g r i d @ a s t e r o : ~ $ . / f o o . s h 7 3
c r s : 2 8 8 0 0

t n s l s n r : 3 3 6 0 0
Забележка: Правилното ползване на временни файлове е разрешено.
